<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Wind Song</title>
    <url>/2019/12/10/Wind-Song/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E9%A3%8E%E4%B9%8B%E8%AF%97/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E9%A3%8E%E4%B9%8B%E8%AF%97/2.png" alt="2"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar.押尾</tag>
      </tags>
  </entry>
  <entry>
    <title>Twilight</title>
    <url>/2019/12/10/Twilight/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E9%BB%84%E6%98%8F/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E9%BB%84%E6%98%8F/2.png" alt="2"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E9%BB%84%E6%98%8F/3.png" alt="3"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
        <tag>押尾</tag>
      </tags>
  </entry>
  <entry>
    <title>无题</title>
    <url>/2019/12/10/%E6%97%A0%E9%A2%98/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%97%A0%E9%A2%98/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%97%A0%E9%A2%98/2.png" alt="2"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%97%A0%E9%A2%98/3.png" alt="3"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%97%A0%E9%A2%98/4.png" alt="4"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%97%A0%E9%A2%98/5.png" alt="5"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
      </tags>
  </entry>
  <entry>
    <title>奇迹的山</title>
    <url>/2019/12/10/%E5%A5%87%E8%BF%B9%E7%9A%84%E5%B1%B1/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E5%A5%87%E8%BF%B9%E7%9A%84%E5%B1%B1/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E5%A5%87%E8%BF%B9%E7%9A%84%E5%B1%B1/2.gif" alt="2"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E5%A5%87%E8%BF%B9%E7%9A%84%E5%B1%B1/3.png" alt="3"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E5%A5%87%E8%BF%B9%E7%9A%84%E5%B1%B1/4.png" alt="4"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
        <tag>岸部真明</tag>
      </tags>
  </entry>
  <entry>
    <title>天空之城</title>
    <url>/2019/12/10/%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E5%A4%A9%E7%A9%BA%E4%B9%8B%E5%9F%8E/1.jpg" alt="1"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
        <tag>久石让</tag>
      </tags>
  </entry>
  <entry>
    <title>time travel</title>
    <url>/2019/12/10/time-travel/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/time%20travel/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/time%20travel/2.png" alt="2"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/time%20travel/3.png" alt="3"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
        <tag>岸部真明</tag>
      </tags>
  </entry>
  <entry>
    <title>first love</title>
    <url>/2019/12/10/first-love/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/first%20love/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/first%20love/2.png" alt="2"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/first%20love/3.png" alt="3"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
      </tags>
  </entry>
  <entry>
    <title>fight</title>
    <url>/2019/12/10/fight/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/fight/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/fight/fight2.png" alt="2"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/fight/fight3.png" alt="3"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/fight/fight4.png" alt="4"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/fight/fight5.png" alt="5"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
        <tag>fight</tag>
      </tags>
  </entry>
  <entry>
    <title>always with me</title>
    <url>/2019/12/10/always-with-me/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/always%20with%20me/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/always%20with%20me/2.png" alt="2"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
      </tags>
  </entry>
  <entry>
    <title>流行的云</title>
    <url>/2019/12/10/%E6%B5%81%E8%A1%8C%E7%9A%84%E4%BA%91/</url>
    <content><![CDATA[<p>前两天看了一下流行的云的谱子，发现居然可以直接手撸，叼的。本身就很简单的一首取曲子。</p>
<p>​    <img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%B5%81%E8%A1%8C%E7%9A%84%E4%BA%91/1.png" alt="1"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%B5%81%E8%A1%8C%E7%9A%84%E4%BA%91/2.png" alt="2"></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/Guitar/pic/%E6%B5%81%E8%A1%8C%E7%9A%84%E4%BA%91/3.png" alt="3"></p>
]]></content>
      <categories>
        <category>爱好</category>
      </categories>
      <tags>
        <tag>Guitar</tag>
        <tag>流行的云</tag>
      </tags>
  </entry>
  <entry>
    <title>ssm学习过程中遇到的问题</title>
    <url>/2019/12/07/ssm%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>能力有限，所以遇到的问题都是一些比较初级的问题。</p>
<hr>
<h5 id="2019-09-26："><a href="#2019-09-26：" class="headerlink" title="2019/09/26："></a>2019/09/26：</h5><p>1.配置包扫描器的时候把多写了类名，控制台报错No mapper…..</p>
<p>2.maven项目导不进jar包：</p>
<p>​                    出错原因：在pom.xml中添加依赖的时候外层多了denpendencyManegement标签对，导致jar包导不进，具体原因不清楚。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;denpendencyManagement&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;denpendencies&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;/denpendencies&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/denpendencyManagement&gt;</span></pre></td></tr></table></figure>

<hr>
<h5 id="2019-09-27："><a href="#2019-09-27：" class="headerlink" title="2019/09/27："></a>2019/09/27：</h5><p>1.spring自动装配不了bean，即在service层使用@Autowired标签装配不了，报错是这样说的，忘记截屏了。</p>
<p>但是其实是我的service层调用Dao层的时候方法的返回值没有写，导致事务一直回滚，卡在那里。</p>
<h5 id="2019-10-05："><a href="#2019-10-05：" class="headerlink" title="2019/10/05："></a>2019/10/05：</h5><p>1.tomcat正常启动，项目部署正常，但是浏览器访问不了项目，404错误，但是访问项目中的<code>部分静态资源</code>正常</p>
<p>​    原因：静态资源加载时被 springmvc 配置的前端控制器拦截了，我当时的前端控制器是这样配置的：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!-- 配置前端控制器 --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">-&lt;servlet&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;servlet-<span class="class"><span class="keyword">class</span>&gt;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">web</span>.<span class="title">servlet</span>.<span class="title">DispatcherServlet</span>&lt;/<span class="title">servlet</span>-<span class="title">class</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class">&lt;!--初始化参数--&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class">-&lt;<span class="title">init</span>-<span class="title">param</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class">&lt;<span class="title">param</span>-<span class="title">name</span>&gt;<span class="title">contextConfigLocation</span>&lt;/<span class="title">param</span>-<span class="title">name</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;param-value&gt;classpath:spring/springmvc.xml&lt;/param-value&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/init-param&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;!--默认是在web-info下面加载.xml文件 --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/servlet&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">-&lt;servlet-mapping&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;url-pattern&gt;/&lt;/url-pattern&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/servlet-mapping&gt;</span></pre></td></tr></table></figure>

<p>​    所有的请求都被springmvc拦了下来。在url-pattern标签对中应该是*.action。拦截action，这样写的话，在Controller层的@RequestMapping(“”)中的地址就要以.action结尾才能拦截到。</p>
<p>同时，还要配置springmvc.xml，要把静态资源交给eclipse自带的servlet处理。添加两个标签：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;mvc:annotation-drivern/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;mvc:<span class="keyword">default</span>-servlet-handler/&gt;</span></pre></td></tr></table></figure>

<p>或者是：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;mvc:resources location=<span class="string">"classpath:/*"</span> mapping=<span class="string">"/**"</span>&gt;</span></pre></td></tr></table></figure>

<p>表示location下的资源可以使用路径直接访问</p>
<hr>
<h5 id="2019-10-13"><a href="#2019-10-13" class="headerlink" title="2019/10/13:"></a>2019/10/13:</h5><p><strong>图先欠着</strong></p>
<p>​    resultType：当使用resultType做SQL语句返回结果类型处理时，对于SQL语句查询出的字段在相应的pojo中必须有和它相同的字段对应，而resultType中的内容就是pojo在本项目中的位置。(返回的值都是固定的)</p>
<p>​    resultMap：当使用resultMap做SQL语句返回结果类型处理时，通常需要在mapper.xml中定义resultMap进行pojo和相应表字段的对应。(我理解的就是返回的值都是自定义的)</p>
<h5 id="2019-10-15："><a href="#2019-10-15：" class="headerlink" title="2019/10/15："></a>2019/10/15：</h5><p><strong>图欠着</strong></p>
<p>1.返回来的数据反不到js里面去，可能是因为返回的数据各式不是json的缘故。不是很懂。</p>
<p>且@Controller的方法返回值是null，经过试图解析器之后的url有点问题。</p>
<p>​    原因：Controller层的方法似乎默认执行完之后会经过试图解析器。会找一个jsp页面。</p>
<p>​    解决：这个注解会返回json格式的数据，就可以返回到js中。</p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/images/wps1.jpg" alt="img"></p>
<hr>
<h5 id="2019-10-17："><a href="#2019-10-17：" class="headerlink" title="2019/10/17："></a>2019/10/17：</h5><p>1.在B方法中获取A方法的类（User）对象：</p>
<p>声明一个全局变量：private User user；</p>
<p>在A方法中给全局变量赋值：this.user=user;</p>
<p>B方法中调用</p>
<p>这是在Controller层要调用已经存在的User对象时候遇到的问题</p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/images/wps3.jpg" alt="img"> </p>
<p>2.在jsp页面中显示回显信息：</p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/images/wps4.jpg" alt="img"> </p>
<p>但是成功才会给”successinfo”设值，失败才会给failinfo设值，jsp页面写两句会包空指针</p>
<p>，至少一个没有（2019/10/20）搞定：使用jstl：使用request域存取数据比较好，因为request存取数据的作用域只是一次请求，session的作用域是一次会话。当一次提示之后就应该释放资源，不然下一次访问还会存在。msg.jsp中就会有多个信息。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!-- user_Active.action --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;!empty successinfo &#125;"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       	&lt;%=request.getAttribute(<span class="string">"successinfo"</span>) %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;/c:if&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;!empty failinfo &#125;"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       	&lt;%=request.getAttribute(<span class="string">"failinfo"</span>) %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;/c:if&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;!-- login.action --&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;!empty loginerror &#125;"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       	&lt;%=request.getAttribute(<span class="string">"loginerror"</span>) %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;/c:if&gt; </span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;!empty loginerror2 &#125;"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       	&lt;%=request.getAttribute(<span class="string">"loginerror2"</span>) %&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">       &lt;/c:if&gt;</span></pre></td></tr></table></figure>



<hr>
<h5 id="2019-10-20"><a href="#2019-10-20" class="headerlink" title="2019/10/20:"></a>2019/10/20:</h5><p>ModelAndView类的使用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/findBypid.action"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="function"><span class="keyword">public</span> ModelAndView <span class="title">findBypid</span><span class="params">(String pid)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="comment">//根据pid查询对应的商品</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		product pro = productService.findBypid(pid);</span></pre></td></tr><tr><td class="code"><pre><span class="line">					跳转的页面  key	value</span></pre></td></tr><tr><td class="code"><pre><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ModelAndView(<span class="string">"product"</span>,<span class="string">"product"</span>,pro);</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&#125;</span></pre></td></tr></table></figure>



<hr>
<h5 id="2019-10-27"><a href="#2019-10-27" class="headerlink" title="2019/10/27:"></a>2019/10/27:</h5><p>mybatis框架中使用不同类型的参数进行查询时，*mapper.xml中的parameter=””属性可以不用写，mybatis自动将参数封装成param1,param2…直接调用就可以</p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/images/wps6.jpg" alt="img"></p>
<hr>
<h5 id="2019-11-13"><a href="#2019-11-13" class="headerlink" title="2019/11/13:"></a>2019/11/13:</h5><p>mybatis中配置文件中的sql：</p>
<p>1.插入操作获取插入后的id值：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;selectKey keyProperty=<span class="string">"oid"</span> keyColumn=<span class="string">"oid"</span> resultType=<span class="string">"int"</span> order=<span class="string">"AFTER"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			<span class="function">select <span class="title">last_insert_id</span><span class="params">()</span></span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/selectKey&gt;</span></pre></td></tr></table></figure>

<p>2.使用<foreach>标签批量插入数据：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="function">insert into <span class="title">orderitem</span> <span class="params">(count,subtotal,pid,oid)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">			values</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function">			&lt;foreach collection</span>=<span class="string">"orderItems"</span> item=<span class="string">"item"</span> separator=<span class="string">","</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			(</span></pre></td></tr><tr><td class="code"><pre><span class="line">				$&#123;item.count&#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				$&#123;item.subtotal&#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				$&#123;item.pro.pid&#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">				$&#123;oid&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			)</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;/foreach&gt;</span></pre></td></tr></table></figure>

<p>3.解决三表联合查询的问题：（嵌套使用<association>或者是<assoiation>）</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;resultMap type=<span class="string">"cn.fzkj.pojo.Order"</span> id=<span class="string">"orders"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;result property=<span class="string">"oid"</span> javaType=<span class="string">"java.lang.Integer"</span> column=<span class="string">"oid"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;result property=<span class="string">"total"</span> javaType=<span class="string">"java.lang.Double"</span> column=<span class="string">"total"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;result property=<span class="string">"ordertime"</span> javaType=<span class="string">"java.util.Date"</span> column=<span class="string">"ordertime"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;result property=<span class="string">"state"</span> javaType=<span class="string">"java.lang.Integer"</span> column=<span class="string">"state"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;result property=<span class="string">"name"</span> javaType=<span class="string">"java.lang.String"</span> column=<span class="string">"name"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;result property=<span class="string">"addr"</span> javaType=<span class="string">"java.lang.String"</span> column=<span class="string">"addr"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;result property=<span class="string">"phone"</span> javaType=<span class="string">"java.lang.String"</span> column=<span class="string">"phone"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;association property=<span class="string">"orderItems"</span> javaType=<span class="string">"cn.fzkj.pojo.OrderItem"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;result property=<span class="string">"itemId"</span> javaType=<span class="string">"java.lang.Integer"</span> column=<span class="string">"itemid"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;result property=<span class="string">"count"</span> javaType=<span class="string">"java.lang.Integer"</span> column=<span class="string">"count"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;result property=<span class="string">"subtotal"</span> javaType=<span class="string">"java.lang.Double"</span> column=<span class="string">"subtotal"</span>/&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;collection property=<span class="string">"pro"</span> javaType=<span class="string">"cn.fzkj.pojo.product"</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"pid"</span> javaType=<span class="string">"java.lang.Integer"</span> column=<span class="string">"pid"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"pname"</span> javaType=<span class="string">"java.lang.String"</span> column=<span class="string">"pname"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"market_price"</span> javaType=<span class="string">"java.lang.Double"</span> column=<span class="string">"market_price"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"shop_price"</span> javaType=<span class="string">"java.lang.Double"</span> column=<span class="string">"shop_price"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"image"</span> javaType=<span class="string">"java.lang.String"</span> column=<span class="string">"image"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"pdesc"</span> javaType=<span class="string">"java.lang.String"</span> column=<span class="string">"pdesc"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"is_hot"</span> javaType=<span class="string">"java.lang.String"</span> column=<span class="string">"is_hot"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"pdate"</span> javaType=<span class="string">"java.util.Date"</span> column=<span class="string">"pdate"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">				&lt;result property=<span class="string">"csid"</span> javaType=<span class="string">"java.lang.Integer"</span> column=<span class="string">"csid"</span> /&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">			&lt;/collection&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">		&lt;/association&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	&lt;/resultMap&gt;</span></pre></td></tr></table></figure>

<hr>
<h5 id="2019-11-28："><a href="#2019-11-28：" class="headerlink" title="2019/11/28："></a>2019/11/28：</h5><p>1.在改js验证表单的功能，发现我不管怎么修改js代码，网页上没有变，换个浏览器就好了，应该是浏览器的缓存。百度了一下，果然是：</p>
<p>​    实际上你每次访问页面. 浏览器都会发起不同的请求获得页面中引入到的js/css/图片什么的. 而对于浏览器来说相同路径的文件除非你设置过不使用缓存, 否则每次都还是会优先从缓存中获得文件内容. 这样有助于节省你的网络开销。</p>
<p>​    解决方式：在引用的js的src后面加上时间戳或者一个随机数</p>
<p>2.把之前项目上的不影响运行的小红叉改掉了。具体原因看不懂，<a href="https://blog.csdn.net/u011781521/article/details/72903455" target="_blank" rel="noopener">解决链接</a></p>
<hr>
<h5 id="2019-12-07"><a href="#2019-12-07" class="headerlink" title="2019/12/07:"></a>2019/12/07:</h5><ul>
<li><p>1.git使用命令行同步仓库到github：</p>
<p>​    git add .  ：添加进暂存区</p>
<p>​    git commit -m’备注’    ：添加进版本库</p>
<p>​    git push -u origin master : 推送到github</p>
</li>
<li><p>2.在markdown中引用github上的图片床：（主要是要获取到github上的图片链接）</p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/images/git.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/2308502963/images_stroe/master/images/git2.png" alt=""></p>
<p>​        然后就可以使用markdown的语法进行引用了。</p>
]]></content>
      <categories>
        <category>知识</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>original intention of blog</title>
    <url>/2019/12/06/original-intention-of-blog/</url>
    <content><![CDATA[<h1 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h1><p>1.记录一些自己喜欢的东西</p>
<hr>
<hr>
<p>2.记录一些自己学习过程中遇到的坑</p>
]]></content>
      <categories>
        <category>初衷</category>
      </categories>
      <tags>
        <tag>ideology</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的使用</title>
    <url>/2019/12/06/Markdown%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="MarkDown的使用"><a href="#MarkDown的使用" class="headerlink" title="MarkDown的使用"></a>MarkDown的使用</h1><h2 id="1-代码块："><a href="#1-代码块：" class="headerlink" title="1.代码块："></a>1.代码块：</h2><h3 id="1-java代码块"><a href="#1-java代码块" class="headerlink" title="1.java代码块"></a>1.java代码块</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">"hello world！"</span>);</span></pre></td></tr></table></figure>

<h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line"># 一级</span></pre></td></tr><tr><td class="code"><pre><span class="line">## 二级</span></pre></td></tr><tr><td class="code"><pre><span class="line">### 三级</span></pre></td></tr><tr><td class="code"><pre><span class="line">#### 四级</span></pre></td></tr><tr><td class="code"><pre><span class="line">##### 五级</span></pre></td></tr><tr><td class="code"><pre><span class="line">###### 六级</span></pre></td></tr></table></figure>

<h1 id="一级"><a href="#一级" class="headerlink" title="一级"></a>一级</h1><h2 id="二级"><a href="#二级" class="headerlink" title="二级"></a>二级</h2><h3 id="三级"><a href="#三级" class="headerlink" title="三级"></a>三级</h3><h4 id="四级"><a href="#四级" class="headerlink" title="四级"></a>四级</h4><h5 id="五级"><a href="#五级" class="headerlink" title="五级"></a>五级</h5><h6 id="六级"><a href="#六级" class="headerlink" title="六级"></a>六级</h6><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//加粗</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">**加粗**</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//高亮</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">==高亮显示的内容==</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//删除线</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">~~删除线~~</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//斜线</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">*斜线*</span></pre></td></tr></table></figure>

<p><strong>加粗</strong></p>
<p>==高亮显示失败==</p>
<p><del>删除线</del></p>
<p><em>斜线</em></p>
<h2 id="4-引用"><a href="#4-引用" class="headerlink" title="4.引用:"></a>4.引用:</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引用的语法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&gt;作者：mr</span></pre></td></tr><tr><td class="code"><pre><span class="line">&gt;&gt;作者:mr</span></pre></td></tr><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;作者:mr</span></pre></td></tr></table></figure>



<blockquote>
<p>作者：mr</p>
<blockquote>
<p>作者:mr</p>
<blockquote>
<p>作者:mr</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="5-分割线："><a href="#5-分割线：" class="headerlink" title="5.分割线："></a>5.分割线：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分割线1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">---</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">///2</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">***</span></pre></td></tr></table></figure>

<hr>
<hr>
<h2 id="6-图片插入"><a href="#6-图片插入" class="headerlink" title="6.图片插入"></a>6.图片插入</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//图片的插入</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">![图片名称](图片路径)</span></pre></td></tr></table></figure>

<p><img src="https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=57eb9359da09b3deffb2ec3aadd607e4/b151f8198618367adb114bec25738bd4b31ce562.jpg" alt="图片名称"></p>
<h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//超链接</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">[点击](url)</span></pre></td></tr></table></figure>

<p><a href="https://2308502963.github.io">我的GitHub主页</a></p>
<hr>
<hr>
<h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8.列表"></a>8.列表</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//无序列表</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">- 目录一</span></pre></td></tr><tr><td class="code"><pre><span class="line">- 目录二</span></pre></td></tr><tr><td class="code"><pre><span class="line">- 目录三</span></pre></td></tr><tr><td class="code"><pre><span class="line"> <span class="comment">//有序列表</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="number">1</span>+.+名称</span></pre></td></tr></table></figure>

<ul>
<li>目录一</li>
<li>目录二</li>
<li>目录三</li>
</ul>
<p>1.首页</p>
<p>2.分类</p>
<h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><table>
<thead>
<tr>
<th>成绩</th>
<th>语文</th>
<th>数学</th>
</tr>
</thead>
<tbody><tr>
<td>mr</td>
<td>21</td>
<td>432</td>
</tr>
<tr>
<td>lj</td>
<td>321</td>
<td>321</td>
</tr>
</tbody></table>
<h2 id="10-引用视频-音频"><a href="#10-引用视频-音频" class="headerlink" title="10.引用视频/音频"></a>10.引用视频/音频</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">```</span></pre></td></tr><tr><td class="code"><pre><span class="line">html	选择html</span></pre></td></tr><tr><td class="code"><pre><span class="line">```</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;video id=<span class="string">"video"</span> controls=<span class="string">""</span> preload=<span class="string">"none"</span> poster=<span class="string">""</span>&gt;		<span class="comment">//加载封面</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      &lt;source id=<span class="string">"mp4"</span> src=<span class="string">""</span> type=<span class="string">"video/mp4"</span>&gt;		<span class="comment">//资源路径</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      &lt;/video&gt;</span></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;audio id=<span class="string">"audio"</span> &gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;source id=<span class="string">""</span> src=<span class="string">""</span>&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;/audio&gt;</span></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>标记语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/05/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>你好，世界!</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
